import { useRef } from "react";
import "../assets/scss/components/collector.scss"

interface inputProps {
    type?: string,
    placeholder?: string,

    value?: string,
    upvalue?: any,
    img?: any
}
export const
    UsernameInput = (props: inputProps) => {
        const
            { placeholder, type, upvalue } = props,
            uni = useRef<HTMLInputElement>(null);
        return <div className="input-username LT16">

            <svg width="22" height="25" viewBox="0 0 22 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M10.9964 13.7298C7.45775 13.7298 4.57775 10.8498 4.57775 7.31118C4.57775 3.77258 7.45775 0.892578 10.9964 0.892578C14.535 0.892578 17.415 3.77258 17.415 7.31118C17.415 10.8498 14.535 13.7298 10.9964 13.7298ZM10.9964 2.567C8.38427 2.567 6.25217 4.69909 6.25217 7.31118C6.25217 9.92328 8.38427 12.0554 10.9964 12.0554C13.6085 12.0554 15.7405 9.92328 15.7405 7.31118C15.7405 4.69909 13.6085 2.567 10.9964 2.567ZM20.5852 24.8926C20.1275 24.8926 19.748 24.513 19.748 24.0554C19.748 20.2042 15.8187 17.0786 10.9964 17.0786C6.17403 17.0786 2.24473 20.2042 2.24473 24.0554C2.24473 24.513 1.8652 24.8926 1.40752 24.8926C0.949847 24.8926 0.570312 24.513 0.570312 24.0554C0.570312 19.2889 5.24752 15.4042 10.9964 15.4042C16.7452 15.4042 21.4224 19.2889 21.4224 24.0554C21.4224 24.513 21.0429 24.8926 20.5852 24.8926Z" fill="#343535" fill-opacity="0.8" />
            </svg>

            <input type={type} placeholder={placeholder} onKeyDown={() => {
                upvalue(uni.current?.value);
            }} />


        </div>
    }, PasswordInput = (props: inputProps) => {
        const
            { placeholder, type, upvalue } = props,
            uni = useRef<HTMLInputElement>(null);
        return <div className="input LT16">

            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g clip-path="url(#clip0_721_6077)">
                    <path d="M19 8.424V7C19 5.14348 18.2625 3.36301 16.9497 2.05025C15.637 0.737498 13.8565 0 12 0C10.1435 0 8.36301 0.737498 7.05025 2.05025C5.7375 3.36301 5 5.14348 5 7V8.424C4.10936 8.81271 3.35129 9.45252 2.8185 10.2652C2.28571 11.0779 2.00128 12.0282 2 13V19C2.00159 20.3256 2.52888 21.5964 3.46622 22.5338C4.40356 23.4711 5.6744 23.9984 7 24H17C18.3256 23.9984 19.5964 23.4711 20.5338 22.5338C21.4711 21.5964 21.9984 20.3256 22 19V13C21.9987 12.0282 21.7143 11.0779 21.1815 10.2652C20.6487 9.45252 19.8906 8.81271 19 8.424ZM7 7C7 5.67392 7.52678 4.40215 8.46447 3.46447C9.40215 2.52678 10.6739 2 12 2C13.3261 2 14.5979 2.52678 15.5355 3.46447C16.4732 4.40215 17 5.67392 17 7V8H7V7ZM20 19C20 19.7956 19.6839 20.5587 19.1213 21.1213C18.5587 21.6839 17.7956 22 17 22H7C6.20435 22 5.44129 21.6839 4.87868 21.1213C4.31607 20.5587 4 19.7956 4 19V13C4 12.2044 4.31607 11.4413 4.87868 10.8787C5.44129 10.3161 6.20435 10 7 10H17C17.7956 10 18.5587 10.3161 19.1213 10.8787C19.6839 11.4413 20 12.2044 20 13V19Z" fill="#343535" fill-opacity="0.8" />
                    <path d="M12 14C11.7348 14 11.4804 14.1054 11.2929 14.2929C11.1054 14.4804 11 14.7348 11 15V17C11 17.2652 11.1054 17.5196 11.2929 17.7071C11.4804 17.8946 11.7348 18 12 18C12.2652 18 12.5196 17.8946 12.7071 17.7071C12.8946 17.5196 13 17.2652 13 17V15C13 14.7348 12.8946 14.4804 12.7071 14.2929C12.5196 14.1054 12.2652 14 12 14Z" fill="#343535" fill-opacity="0.8" />
                </g>
                <defs>
                    <clipPath id="clip0_721_6077">
                        <rect width="24" height="24" fill="white" />
                    </clipPath>
                </defs>
            </svg>

            <input type={type} placeholder={placeholder} onKeyDown={() => {
                upvalue(uni.current?.value);
            }} />

            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g clip-path="url(#clip0_721_6082)">
                    <path d="M1.38281 9.17377L13.1508 20.9418C12.7708 20.9788 12.3858 20.9988 11.9968 20.9988C11.9058 20.9988 11.8228 20.9868 11.7328 20.9848L0.815813 10.0678C0.976813 9.79377 1.16981 9.48977 1.38281 9.17377ZM2.60381 7.56677L15.4988 20.4618C15.8578 20.3478 16.2118 20.2188 16.5608 20.0698L3.29981 6.80877C3.05181 7.06077 2.82181 7.31477 2.60381 7.56677ZM0.134813 12.6358C0.134813 12.6358 0.861813 14.0768 1.51081 15.0188L5.53681 19.0448C6.39856 19.62 7.33268 20.0787 8.31481 20.4088L0.0078125 12.1018C0.0198125 12.2848 0.0568125 12.4658 0.134813 12.6368V12.6358ZM19.2348 18.5008L23.6248 22.8908L22.9178 23.5978L0.369812 1.04977L1.07681 0.342773L5.62781 4.89377C7.51895 3.65043 9.73458 2.992 11.9978 3.00077C19.8438 3.00077 23.5038 10.5068 23.8958 11.3628C24.0808 11.7688 24.0808 12.2328 23.8958 12.6368C23.5028 13.4948 22.0478 16.3468 19.2348 18.5018V18.5008ZM15.1698 14.4358C16.3748 12.8688 16.2598 10.6058 14.8258 9.17077C13.3918 7.73577 11.1278 7.62177 9.56081 8.82677L15.1698 14.4358ZM22.9838 12.2208C23.0159 12.1512 23.0325 12.0754 23.0325 11.9988C23.0325 11.9221 23.0159 11.8464 22.9838 11.7768C22.6198 10.9818 19.2178 3.99977 11.9958 3.99977C9.97081 3.99977 8.07381 4.54377 6.34981 5.61777L8.84681 8.11577C10.8088 6.52377 13.7058 6.63977 15.5308 8.46477C17.3558 10.2898 17.4728 13.1868 15.8798 15.1488L18.5188 17.7878C21.2948 15.7038 22.7168 12.8008 22.9818 12.2218L22.9838 12.2208Z" fill="#343535" fill-opacity="0.8" />
                </g>
                <defs>
                    <clipPath id="clip0_721_6082">
                        <rect width="24" height="24" fill="white" />
                    </clipPath>
                </defs>
            </svg>

        </div>
    }, CheckInput = (_props: inputProps) => {
        return <div className="input-checkbox LT15">

            <input type="checkbox" /> <p>Remember me</p>

        </div>
    }, CustomeInput = (props: inputProps) => {
        const
            { placeholder, type, upvalue, img } = props,
            uni = useRef<HTMLInputElement>(null);
        return <div className="input LT16">

            {img}

            <input type={type} placeholder={placeholder} onKeyDown={() => {
                upvalue(uni.current?.value);
            }} />

        </div>
    }, EmailInput = (props: inputProps) => {
        const
            { placeholder, type, upvalue } = props,
            uni = useRef<HTMLInputElement>(null);
        return <div className="input LT16">

            <svg width="25" height="23" viewBox="0 0 25 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M19.75 0.533203H5.75C4.42441 0.534791 3.15356 1.06209 2.21622 1.99942C1.27888 2.93676 0.751588 4.20761 0.75 5.5332L0.75 17.5332C0.751588 18.8588 1.27888 20.1296 2.21622 21.067C3.15356 22.0043 4.42441 22.5316 5.75 22.5332H19.75C21.0756 22.5316 22.3464 22.0043 23.2838 21.067C24.2211 20.1296 24.7484 18.8588 24.75 17.5332V5.5332C24.7484 4.20761 24.2211 2.93676 23.2838 1.99942C22.3464 1.06209 21.0756 0.534791 19.75 0.533203ZM5.75 2.5332H19.75C20.3488 2.53438 20.9335 2.71472 21.429 3.05101C21.9244 3.3873 22.3079 3.86415 22.53 4.4202L14.872 12.0792C14.3084 12.6405 13.5454 12.9557 12.75 12.9557C11.9546 12.9557 11.1916 12.6405 10.628 12.0792L2.97 4.4202C3.19215 3.86415 3.57561 3.3873 4.07105 3.05101C4.56648 2.71472 5.15121 2.53438 5.75 2.5332ZM19.75 20.5332H5.75C4.95435 20.5332 4.19129 20.2171 3.62868 19.6545C3.06607 19.0919 2.75 18.3289 2.75 17.5332V7.0332L9.214 13.4932C10.1526 14.4295 11.4243 14.9552 12.75 14.9552C14.0757 14.9552 15.3474 14.4295 16.286 13.4932L22.75 7.0332V17.5332C22.75 18.3289 22.4339 19.0919 21.8713 19.6545C21.3087 20.2171 20.5456 20.5332 19.75 20.5332Z" fill="#343535" fill-opacity="0.8" />
            </svg>


            <input type={type} placeholder={placeholder} onKeyDown={() => {
                upvalue(uni.current?.value);
            }} />

        </div>
    }, IdInput = (props: inputProps) => {
        const
            { placeholder, type, upvalue } = props,
            uni = useRef<HTMLInputElement>(null);
        return <div className="input IdNum LT16">

            <span>
                <input type={type} placeholder={placeholder} onKeyDown={() => { upvalue(uni.current?.value); }} />
            </span>

        </div>
    };